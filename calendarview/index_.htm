<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>GCalendar</title>
        <!--script src="libs/jquery-1.9.0.js"></script-->
        <!--script src="libs/oauth.js"></script-->
        <!--script src="libs/sha1.js"></script-->

        <!--The JS client can be loaded with the following script tag:-->
        <link rel='stylesheet' href='css/style.css'>

        
        <script src="https://apis.google.com/js/client.js?onload=OnLoadCallback"></script>
        <!-- Include this jQuery library: -->
        <script type="text/javascript" src="js/jquery-1.9.0.js"></script>
        <script type="text/javascript" src="js/authentification.js"></script>
        <script type="text/javascript" src="js/AskGoogle.js"></script>
        <script type="text/javascript" src="js/CalendarModel.js"></script>
        <script type="text/javascript" src="js/ViewAndController.js"></script>
		<script src="http://d3js.org/d3.v3.min.js"></script>
		<script type='text/javascript' src='js/yearView.js'></script>

        <script type="text/javascript" >
            $(document).ready(function() {
                appModel = new AppModel();
                appGeneralController = new AppGeneralController(appModel);

                function AppGeneralController(appModel) {
                    
                    authentification = new Authentification(appModel);
                    
                    //Register an observer to the model
                    appModel.addObserver(this);

                    //This function gets called when there is a change at the model
                    this.update = function(arg) {
                    //setTimeout(function() {}, 2000);
                        if (arg == 'libraryStatus' && appModel.getLibraryStatus()) {
                            calendarModel = new CalendarModel();
                            askGoogle = new AskGoogle(calendarModel);
                            view = new View($("#workspace"), calendarModel);
                            viewController = new ViewController(view, calendarModel);
                            }
    
                        }
                    }

                });
        </script>
    </head>
    
    <body>
        
        <button ID='authorize-button'>Sign in with google</button>
        <a href="https://www.google.com/accounts/Logout">Sign out</a>
        <div ID="workspace"></div> 
        
<script>

//d3.jason('event.jason',function(yearlyView){
	
	var width = 960,
	    height = 136,
	    cellSize = 17; // cell size
	
	var day = d3.time.format("%w"),     //%w weekday as a decimal number [0(Sunday),6].
	    week = d3.time.format("%U"),	//%U week number of the year (Sunday as the first day of the week) as a decimal number [00,53].
	    percent = d3.format(".1%"),		//
	    format = d3.time.format("%Y-%m-%d");
	
	var color = d3.scale.quantize()		//quantize() ,output discrete range, the mapping is linear
	    //.domain([-.05, .05])
		.domain([11.0, 0.0])	//input domain
	    .range(d3.range(11).map(function(d) { return "q" + d + "-11"; }));  //output range

	var svg = d3.select("body").selectAll("svg")
	    //.data(d3.range(1990, 2011))
		 .data(d3.range(2012, 2014))
	  .enter().append("svg")
	    .attr("width", width)
	    .attr("height", height)
	    .attr("class", "RdYlGn")
	  .append("g")		//Used to group together elements, so this is tha actual grids we see
	    .attr("transform", "translate(" + ((width - cellSize * 53)/2) + "," + (height - cellSize * 7 - 1) + ")");  
	    //translate(x,y),is for moving a graph object;
	    //this is actually the margins of the whole graph, (29.5,16)
	
	svg.append("text")
	    .attr("transform", "translate(-6," + cellSize * 3.5 + ")rotate(-90)")
	    .style("text-anchor", "middle")
	    .text(function(d) { return d; });
	
	var rect = svg.selectAll(".day")
	    .data(function(d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
	    	//d3.time.days(start, stop[, step])
	    	//Date(year, month, day)
	    	//it gets every day from the year d to year d+1
	  .enter().append("rect")     //Here they draw the grids.
	    .attr("class", "day")
	    .attr("width", cellSize)
	    .attr("height", cellSize)
	    .attr("x", function(d) { return week(d) * cellSize; })   //position of each grid
	    .attr("y", function(d) { return day(d) * cellSize; })
	    .datum(format); //get the value from format,d3.time.format("%Y-%m-%d")
	
	rect.append("title")
	    .text(function(d) { return d; });
	
	svg.selectAll(".month")
	    .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
	    	//d3.time.months(start, stop[, step]).
	    	//every month from year d to year d+1
	  .enter().append("path")
	    .attr("class", "month")
	    .attr("d", monthPath);		//set the border of a month on the graph, using the function monthPath
	
	/*------------------------*/
	/* importing the datas   */
	/*----------------------*/
	

	
	
	d3.csv("sample_data_v0.1.csv", function(error, csv) {
	  var data = d3.nest()
	    .key(function(d) {   return d.Date;  })
	    .rollup(function(d) { return d[0].Duration;   })
	    .map(csv);
	    
	    
	  rect.filter(function(d) { return d in data; })
	      .attr("class", function(d) { return "day " + color(data[d]); })
	    .select("title")
	      .text(function(d) { return d + ": " + data[d] +" h"; });
	      
	      
	});
	


        
    
	
	function monthPath(t0) {
	  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
	      d0 = +day(t0), w0 = +week(t0),
	      d1 = +day(t1), w1 = +week(t1);
	  return "M" + (w0 + 1) * cellSize + "," + d0 * cellSize
	      + "H" + w0 * cellSize + "V" + 7 * cellSize
	      + "H" + w1 * cellSize + "V" + (d1 + 1) * cellSize
	      + "H" + (w1 + 1) * cellSize + "V" + 0
	      + "H" + (w0 + 1) * cellSize + "Z";
	}
	
	d3.select(self.frameElement).style("height", "2910px");
//});
        </script>
    </body>
</html>

